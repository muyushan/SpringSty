<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sane.pkg.dao.mappers.CustomerBillDetailMapper" >
  <resultMap id="BaseResultMap" type="com.sane.pkg.beans.CustomerBillDetail" >
    <id column="BillDetailId" property="billDetailId" jdbcType="INTEGER" />
    <result column="StorageProductBillCode" property="storageProductBillCode" jdbcType="VARCHAR" />
    <result column="ProductCode" property="productCode" jdbcType="VARCHAR" />
    <result column="Quantity" property="quantity" jdbcType="DOUBLE" />
    <result column="OutQuantity" property="outQuantity" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BillDetailId, StorageProductBillCode, ProductCode, Quantity, OutQuantity
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sane.pkg.beans.CustomerBillDetailCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CustomerBillDetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from CustomerBillDetail
    where BillDetailId = #{billDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from CustomerBillDetail
    where BillDetailId = #{billDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sane.pkg.beans.CustomerBillDetailCriteria" >
    delete from CustomerBillDetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sane.pkg.beans.CustomerBillDetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="billDetailId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into CustomerBillDetail (StorageProductBillCode, ProductCode, 
      Quantity, OutQuantity)
    values (#{storageProductBillCode,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=DOUBLE}, #{outQuantity,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.sane.pkg.beans.CustomerBillDetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="billDetailId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into CustomerBillDetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storageProductBillCode != null" >
        StorageProductBillCode,
      </if>
      <if test="productCode != null" >
        ProductCode,
      </if>
      <if test="quantity != null" >
        Quantity,
      </if>
      <if test="outQuantity != null" >
        OutQuantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storageProductBillCode != null" >
        #{storageProductBillCode,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="outQuantity != null" >
        #{outQuantity,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sane.pkg.beans.CustomerBillDetailCriteria" resultType="java.lang.Integer" >
    select count(*) from CustomerBillDetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update CustomerBillDetail
    <set >
      <if test="record.billDetailId != null" >
        BillDetailId = #{record.billDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.storageProductBillCode != null" >
        StorageProductBillCode = #{record.storageProductBillCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null" >
        ProductCode = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        Quantity = #{record.quantity,jdbcType=DOUBLE},
      </if>
      <if test="record.outQuantity != null" >
        OutQuantity = #{record.outQuantity,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update CustomerBillDetail
    set BillDetailId = #{record.billDetailId,jdbcType=INTEGER},
      StorageProductBillCode = #{record.storageProductBillCode,jdbcType=VARCHAR},
      ProductCode = #{record.productCode,jdbcType=VARCHAR},
      Quantity = #{record.quantity,jdbcType=DOUBLE},
      OutQuantity = #{record.outQuantity,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sane.pkg.beans.CustomerBillDetail" >
    update CustomerBillDetail
    <set >
      <if test="storageProductBillCode != null" >
        StorageProductBillCode = #{storageProductBillCode,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        ProductCode = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        Quantity = #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="outQuantity != null" >
        OutQuantity = #{outQuantity,jdbcType=DOUBLE},
      </if>
    </set>
    where BillDetailId = #{billDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sane.pkg.beans.CustomerBillDetail" >
    update CustomerBillDetail
    set StorageProductBillCode = #{storageProductBillCode,jdbcType=VARCHAR},
      ProductCode = #{productCode,jdbcType=VARCHAR},
      Quantity = #{quantity,jdbcType=DOUBLE},
      OutQuantity = #{outQuantity,jdbcType=DOUBLE}
    where BillDetailId = #{billDetailId,jdbcType=INTEGER}
  </update>
</mapper>