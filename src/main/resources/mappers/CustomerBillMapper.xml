<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sane.pkg.dao.mappers.CustomerBillMapper" >
  <resultMap id="BaseResultMap" type="com.sane.pkg.beans.CustomerBill" >
    <id column="StorageProductBillId" property="storageProductBillId" jdbcType="INTEGER" />
    <result column="StorageProductBillCode" property="storageProductBillCode" jdbcType="VARCHAR" />
    <result column="Quantity" property="quantity" jdbcType="DOUBLE" />
    <result column="TotalPrice" property="totalPrice" jdbcType="DOUBLE" />
    <result column="CustomerCode" property="customerCode" jdbcType="VARCHAR" />
    <result column="BillStatus" property="billStatus" jdbcType="VARCHAR" />
    <result column="OutQuantity" property="outQuantity" jdbcType="DOUBLE" />
    <result column="CreateDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="Creator" property="creator" jdbcType="VARCHAR" />
    <result column="ModifyDate" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="Modifyer" property="modifyer" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    StorageProductBillId, StorageProductBillCode, Quantity, TotalPrice, CustomerCode, 
    BillStatus, OutQuantity, CreateDate, Creator, ModifyDate, Modifyer
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sane.pkg.beans.CustomerBillCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CustomerBill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from CustomerBill
    where StorageProductBillId = #{storageProductBillId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from CustomerBill
    where StorageProductBillId = #{storageProductBillId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sane.pkg.beans.CustomerBillCriteria" >
    delete from CustomerBill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sane.pkg.beans.CustomerBill" >
    <selectKey resultType="java.lang.Integer" keyProperty="storageProductBillId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into CustomerBill (StorageProductBillCode, Quantity, 
      TotalPrice, CustomerCode, BillStatus, 
      OutQuantity, CreateDate, Creator, 
      ModifyDate, Modifyer)
    values (#{storageProductBillCode,jdbcType=VARCHAR}, #{quantity,jdbcType=DOUBLE}, 
      #{totalPrice,jdbcType=DOUBLE}, #{customerCode,jdbcType=VARCHAR}, #{billStatus,jdbcType=VARCHAR}, 
      #{outQuantity,jdbcType=DOUBLE}, #{createDate,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{modifyDate,jdbcType=TIMESTAMP}, #{modifyer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sane.pkg.beans.CustomerBill" >
    <selectKey resultType="java.lang.Integer" keyProperty="storageProductBillId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into CustomerBill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storageProductBillCode != null" >
        StorageProductBillCode,
      </if>
      <if test="quantity != null" >
        Quantity,
      </if>
      <if test="totalPrice != null" >
        TotalPrice,
      </if>
      <if test="customerCode != null" >
        CustomerCode,
      </if>
      <if test="billStatus != null" >
        BillStatus,
      </if>
      <if test="outQuantity != null" >
        OutQuantity,
      </if>
      <if test="createDate != null" >
        CreateDate,
      </if>
      <if test="creator != null" >
        Creator,
      </if>
      <if test="modifyDate != null" >
        ModifyDate,
      </if>
      <if test="modifyer != null" >
        Modifyer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storageProductBillCode != null" >
        #{storageProductBillCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="customerCode != null" >
        #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="billStatus != null" >
        #{billStatus,jdbcType=VARCHAR},
      </if>
      <if test="outQuantity != null" >
        #{outQuantity,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyer != null" >
        #{modifyer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sane.pkg.beans.CustomerBillCriteria" resultType="java.lang.Integer" >
    select count(*) from CustomerBill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update CustomerBill
    <set >
      <if test="record.storageProductBillId != null" >
        StorageProductBillId = #{record.storageProductBillId,jdbcType=INTEGER},
      </if>
      <if test="record.storageProductBillCode != null" >
        StorageProductBillCode = #{record.storageProductBillCode,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        Quantity = #{record.quantity,jdbcType=DOUBLE},
      </if>
      <if test="record.totalPrice != null" >
        TotalPrice = #{record.totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.customerCode != null" >
        CustomerCode = #{record.customerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.billStatus != null" >
        BillStatus = #{record.billStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.outQuantity != null" >
        OutQuantity = #{record.outQuantity,jdbcType=DOUBLE},
      </if>
      <if test="record.createDate != null" >
        CreateDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        Creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyDate != null" >
        ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyer != null" >
        Modifyer = #{record.modifyer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update CustomerBill
    set StorageProductBillId = #{record.storageProductBillId,jdbcType=INTEGER},
      StorageProductBillCode = #{record.storageProductBillCode,jdbcType=VARCHAR},
      Quantity = #{record.quantity,jdbcType=DOUBLE},
      TotalPrice = #{record.totalPrice,jdbcType=DOUBLE},
      CustomerCode = #{record.customerCode,jdbcType=VARCHAR},
      BillStatus = #{record.billStatus,jdbcType=VARCHAR},
      OutQuantity = #{record.outQuantity,jdbcType=DOUBLE},
      CreateDate = #{record.createDate,jdbcType=TIMESTAMP},
      Creator = #{record.creator,jdbcType=VARCHAR},
      ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP},
      Modifyer = #{record.modifyer,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sane.pkg.beans.CustomerBill" >
    update CustomerBill
    <set >
      <if test="storageProductBillCode != null" >
        StorageProductBillCode = #{storageProductBillCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        Quantity = #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="totalPrice != null" >
        TotalPrice = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="customerCode != null" >
        CustomerCode = #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="billStatus != null" >
        BillStatus = #{billStatus,jdbcType=VARCHAR},
      </if>
      <if test="outQuantity != null" >
        OutQuantity = #{outQuantity,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null" >
        CreateDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        Creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifyDate != null" >
        ModifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyer != null" >
        Modifyer = #{modifyer,jdbcType=VARCHAR},
      </if>
    </set>
    where StorageProductBillId = #{storageProductBillId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sane.pkg.beans.CustomerBill" >
    update CustomerBill
    set StorageProductBillCode = #{storageProductBillCode,jdbcType=VARCHAR},
      Quantity = #{quantity,jdbcType=DOUBLE},
      TotalPrice = #{totalPrice,jdbcType=DOUBLE},
      CustomerCode = #{customerCode,jdbcType=VARCHAR},
      BillStatus = #{billStatus,jdbcType=VARCHAR},
      OutQuantity = #{outQuantity,jdbcType=DOUBLE},
      CreateDate = #{createDate,jdbcType=TIMESTAMP},
      Creator = #{creator,jdbcType=VARCHAR},
      ModifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      Modifyer = #{modifyer,jdbcType=VARCHAR}
    where StorageProductBillId = #{storageProductBillId,jdbcType=INTEGER}
  </update>
</mapper>